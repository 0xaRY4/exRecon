#!/bin/bash
# exRecon - Ultimate Subdomain Recon & HTTP Status Organizer
# Author: aRY4
# GitHub: https://github.com/aRY4/exRecon

# Display start banner
echo ""
echo "___      __   ___  __   __       "
echo "|__  \_/ |__) |__  /  \` /  \ |\ | "
echo "|___ / \ |  \ |___ \__, \__/ | \|"
echo ""
echo "                          by aRY4"
echo "------------------------------------------------------------"

# Check if target domain is provided
if [ -z "$1" ]; then
    echo "Usage: $0 <domain>"
    exit 1
fi

domain=$1
output_dir="$domain"

# Create output directory if it doesn't exist
if [ ! -d "$output_dir" ]; then
    mkdir -p "$output_dir"
fi

# =====================
#  RECON PHASES
# =====================

# Phase 1: Subdomain Enumeration
function phase1 {
    echo -e "\n\033[1;34m[+] PHASE 1: Subdomain Enumeration\033[0m"
    
    echo -n -e "[*] Running Subfinder........."
    subfinder -d "$domain" > "$output_dir/subfinder-subdomains.txt" 2>/dev/null
    echo -e " \033[1;32mDone!\033[0m"
    
    echo -n -e "[*] Running Assetfinder......"
    assetfinder --subs-only "$domain" > "$output_dir/assetfinder-subdomains.txt" 2>/dev/null
    echo -e " \033[1;32mDone!\033[0m"
    
    echo -n -e "[*] Fetching AbuseIPDB......"
    curl "https://www.abuseipdb.com/whois/$domain" -s --compressed \
    -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:136.0) Gecko/20100101 Firefox/136.0" \
    -H "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8" \
    -H "Accept-Language: en-US,en;q=0.5" \
    -H "Accept-Encoding: gzip, deflate, br, zstd" \
    -H "Alt-Used: www.abuseipdb.com" \
    -H "Connection: keep-alive" \
    -H "Cookie: [REDACTED]" \
    -H "Upgrade-Insecure-Requests: 1" \
    -H "Sec-Fetch-Dest: document" \
    -H "Sec-Fetch-Mode: navigate" \
    -H "Sec-Fetch-Site: none" \
    -H "Sec-Fetch-User: ?1" \
    -H "Priority: u=0, i" \
    -H "TE: trailers" | grep -E "<li>\w.*</li>" | sed -E 's/<\/?li>//g' | sed -e "s/$/\.$domain/g" > "$output_dir/abuseipdb-subdomains.txt"
    echo -e " \033[1;32mDone!\033[0m"
}

# Phase 2: Data Processing
function phase2 {
    echo -e "\n\033[1;34m[+] PHASE 2: Data Processing\033[0m"
    echo -n -e "[*] Merging results.........."
    cat "$output_dir"/*-subdomains.txt | sort -u > "$output_dir/final-subdomains.txt"
    count=$(wc -l < "$output_dir/final-subdomains.txt")
    echo -e " \033[1;32mFound $count subdomains!\033[0m"
}

# Phase 3: DNS Resolution
function phase3 {
    echo -e "\n\033[1;34m[+] PHASE 3: DNS Resolution\033[0m"
    echo -n -e "[*] Validating DNS records..."
    cat "$output_dir/final-subdomains.txt" | dnsx -silent -a -resp | awk '{print $1}' > "$output_dir/resolved-subdomains.txt" 2>/dev/null
    resolved=$(wc -l < "$output_dir/resolved-subdomains.txt")
    echo -e " \033[1;32m$resolved resolved!\033[0m"
}

# Phase 4: HTTP Probing
function phase4 {
    echo -e "\n\033[1;34m[+] PHASE 4: HTTP Probing\033[0m"
    echo -n -e "[*] Scanning live hosts....."
    cat "$output_dir/resolved-subdomains.txt" | httpx -status-code -title -tech-detect -silent > "$output_dir/live-subdomains-with-status.txt" 2>/dev/null
    live=$(wc -l < "$output_dir/live-subdomains-with-status.txt")
    echo -e " \033[1;32m$live hosts alive!\033[0m"
}


# Execute all phases
phase1
phase2
phase3
phase4

# Display finish banner
echo ""
echo "___           __       "
echo "|__  | |\ | | /__\` |__| "
echo "|    | | \| | .__/ |  |"
echo ""
echo -e "\033[1;36m[+] Scan completed!\033[0m"
echo -e "\033[1;37mResults saved in directory:\033[0m"
echo -e " - $output_dir/final-subdomains.txt"
echo -e " - $output_dir/resolved-subdomains.txt"
echo -e " - $output_dir/live-subdomains-with-status.txt"
echo -e " - $output_dir/clean-http-status.txt"
echo ""
echo "           Happy hunting! - aRY4"
echo ""
